{"name": "User login with correct email and password", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: Page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL\nCall log:\n  - navigating to \"./#/auth/registration\", waiting until \"networkidle\"", "trace": "self = <tests.authentication.test_authorization.TestAuthorization object at 0x000002504502B910>\nregistration_page = <pages.authentication.registration_page.RegistrationPage object at 0x000002504639E9D0>\ndashboard_page = <pages.dashboard.dashboard_page.DashboardPage object at 0x000002504639EE50>\nlogin_page = <pages.authentication.login_page.LoginPage object at 0x000002504639F950>\n\n    @allure.tag(AllureTag.USER_LOGIN)\n    @allure.title('User login with correct email and password')\n    @allure.severity(Severity.BLOCKER)\n    def test_successful_authorization(\n            self,\n            registration_page: RegistrationPage,\n            dashboard_page: DashboardPage,\n            login_page: LoginPage\n    ):\n>       registration_page.visit(AppRoute.REGISTRATION)\n\ntests\\authentication\\test_authorization.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:12: in visit\n    self.page.goto(url, wait_until='networkidle')\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:9019: in goto\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_page.py:556: in goto\n    return await self._main_frame.goto(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:153: in goto\n    await self._channel.send(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000025045037750>\ncb = <function Channel.send.<locals>.<lambda> at 0x000002504530FF60>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: Page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL\nE           Call log:\nE             - navigating to \"./#/auth/registration\", waiting until \"networkidle\"\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: Error"}, "steps": [{"name": "Opening the AppRoute.REGISTRATION", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: Page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL\nCall log:\n  - navigating to \"./#/auth/registration\", waiting until \"networkidle\"\n\n", "trace": "  File \"D:\\GitHub\\autotests-ui\\pages\\base_page.py\", line 12, in visit\n    self.page.goto(url, wait_until='networkidle')\n  File \"D:\\GitHub\\autotests-ui\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 9019, in goto\n    self._sync(\n  File \"D:\\GitHub\\autotests-ui\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"D:\\GitHub\\autotests-ui\\venv\\Lib\\site-packages\\playwright\\_impl\\_page.py\", line 556, in goto\n    return await self._main_frame.goto(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GitHub\\autotests-ui\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 153, in goto\n    await self._channel.send(\n  File \"D:\\GitHub\\autotests-ui\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 69, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GitHub\\autotests-ui\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 558, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1761568301939, "stop": 1761568302015}], "start": 1761568301939, "stop": 1761568302030, "uuid": "5d4dcb6e-ab68-4148-9437-273e8e807b6c", "historyId": "bcc9a804195f7b2f6ea23bcf2d5a6711", "testCaseId": "bcc9a804195f7b2f6ea23bcf2d5a6711", "fullName": "tests.authentication.test_authorization.TestAuthorization#test_successful_authorization", "labels": [{"name": "epic", "value": "LMS system"}, {"name": "story", "value": "Authorization"}, {"name": "tag", "value": "USER_LOGIN"}, {"name": "tag", "value": "REGRESSION"}, {"name": "feature", "value": "Authentication"}, {"name": "parentSuite", "value": "LMS system"}, {"name": "severity", "value": "blocker"}, {"name": "suite", "value": "Authentication"}, {"name": "tag", "value": "AUTHORIZATION"}, {"name": "subSuite", "value": "Authorization"}, {"name": "tag", "value": "authorization"}, {"name": "tag", "value": "regression"}, {"name": "host", "value": "FB-F1232"}, {"name": "thread", "value": "3612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.authentication.test_authorization"}], "titlePath": ["tests", "authentication", "test_authorization.py", "TestAuthorization"]}